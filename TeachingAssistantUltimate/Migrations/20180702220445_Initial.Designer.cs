// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeachingAssistantUltimate.Context;

namespace TeachingAssistantUltimate.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180702220445_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("TeachingAssistant.Model.Options", b =>
                {
                    b.Property<Guid>("OptionsID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<bool>("IsAnswer");

                    b.Property<string>("Option")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("QuestionsID");

                    b.HasKey("OptionsID");

                    b.HasIndex("QuestionsID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("TeachingAssistant.Model.Questions", b =>
                {
                    b.Property<Guid>("QuestionsID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(2147483647);

                    b.Property<int>("SubjectsID");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("QuestionsID");

                    b.HasIndex("SubjectsID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("TeachingAssistant.Model.Subjects", b =>
                {
                    b.Property<int>("SubjectsID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("SubjectsID");

                    b.ToTable("Subjects");

                    b.HasData(
                        new { SubjectsID = 1, Subject = "Public Health Nursing" },
                        new { SubjectsID = 2, Subject = "Basic Infection Prevention and Control" }
                    );
                });

            modelBuilder.Entity("TeachingAssistant.Model.Options", b =>
                {
                    b.HasOne("TeachingAssistant.Model.Questions", "Questions")
                        .WithMany("Options")
                        .HasForeignKey("QuestionsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TeachingAssistant.Model.Questions", b =>
                {
                    b.HasOne("TeachingAssistant.Model.Subjects", "Subjects")
                        .WithMany("Questions")
                        .HasForeignKey("SubjectsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
